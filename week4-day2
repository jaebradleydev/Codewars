DESCRIPTION:
Given a 2D ( nested ) list ( array, vector, .. ) of size m * n, your task is to find the sum of the minimum values in each row.

For Example:

[ [ 1, 2, 3, 4, 5 ]        #  minimum value of row is 1
, [ 5, 6, 7, 8, 9 ]        #  minimum value of row is 5
, [ 20, 21, 34, 56, 100 ]  #  minimum value of row is 20
]
So the function should return 26 because the sum of the minimums is 1 + 5 + 20 = 26.

Note: You will always be given a non-empty list containing positive values.

ENJOY CODING :)


function sumOfMinimums(arr) {
  // Since our end product is a sum, we can declare an empty number variable (a variable with the value 0 to be added onto)
  var minimumTotal = 0
  // We can then use a for loop to loop through the meta array and sort each array numerically (one at each index)
  for (i=0; i < arr.length; i++){
    arr[i].sort((a,b)=>a-b);
  // Once sorted, we can add the minimum value, or what is now the 0 index of each array, to the sum variable minimumTotal
    minimumTotal += arr[i][0]
  }
  return minimumTotal
}
